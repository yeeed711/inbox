name: Comment Triggered Workflow

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]

jobs:
  handle-comment:
    # PR 코멘트이고 collaborator나 owner가 작성한 경우에만 실행
    if: |
      github.event_name == 'pull_request_review_comment' ||
      (github.event_name == 'issue_comment' && github.event.issue.pull_request)
    runs-on: ubuntu-latest
    steps:
      - name: Check permissions
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            const { data: permission } = await github.rest.repos.getCollaboratorPermissionLevel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              username: context.actor
            });

            const hasPermission = ['admin', 'write'].includes(permission.permission);
            console.log(`User ${context.actor} has permission: ${permission.permission}`);

            core.setOutput('has_permission', hasPermission);

            return hasPermission;

      - name: Parse comment command
        id: parse
        if: steps.check.outputs.has_permission == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const comment = context.payload.comment.body.trim();
            console.log(`Comment: ${comment}`);

                         // 간단한 명령어들
             const commands = {
               comment: /^\/comment$/i
             };

            let command = null;

            for (const [cmd, pattern] of Object.entries(commands)) {
              if (pattern.test(comment)) {
                command = cmd;
                break;
              }
            }

            console.log(`Parsed command: ${command}`);

            core.setOutput('command', command || '');

            return command !== null;

      # /comment 명령어 처리
      - name: Reply Hello World
        if: steps.parse.outputs.command == 'comment'
        uses: actions/github-script@v7
        with:
          script: |
            const body = `Hello World! 👋\n\n_Triggered by @${context.actor}_`;

            // PR 코멘트인지 이슈 코멘트인지 확인하여 적절한 API 사용
            if (context.eventName === 'pull_request_review_comment') {
              await github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                body: body,
                event: 'COMMENT'
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                body: body
              });
            }

      # 권한이 없는 경우 알림
      - name: No permission warning
        if: steps.check.outputs.has_permission != 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const body = `⚠️ **Permission Denied**\n\nSorry @${context.actor}, you don't have permission to trigger workflows via comments.\n\nOnly repository collaborators with write access can use comment commands.`;

            if (context.eventName === 'pull_request_review_comment') {
              await github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                body: body,
                event: 'COMMENT'
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                body: body
              });
            }
